ARG NODE_VERSION=latest
ARG NODE_MAJOR_VERSION=20

# Base image using the correct version of Node and npm.
FROM --platform=linux/amd64 node:${NODE_VERSION} AS node-base

ARG NPM_VERSION=latest

RUN npm install -g npm@${NPM_VERSION}
USER node
WORKDIR /home/node

# Image with dev dependencies, used to build the TypeScript code.
FROM node-base AS builder

# Used for private npm packages.
ARG NPM_TOKEN

# This uses a glob pattern which will only copy `.npmrc`, but allows the file to be missing.
COPY .npmr[c] /home/node/
COPY package*.json /home/node/
RUN npm ci

COPY nest-cli.jso[n] /home/node/
COPY tsconfig*.json /home/node/
COPY src/ /home/node/src/
RUN npm run build

# Image to get production dependencies.
FROM node-base as builder-prod-dependencies
ARG NPM_TOKEN
COPY --from=builder /home/node/.npmr[c] /home/node/
COPY --from=builder /home/node/package*.json /home/node/
RUN npm ci --omit=dev

# Final image, only containing production dependencies and the compiled JavaScript code.
FROM gcr.io/distroless/nodejs${NODE_MAJOR_VERSION}

WORKDIR /app

COPY --from=builder /home/node/package.json /app/package.json
COPY --from=builder-prod-dependencies /home/node/node_modules /app/node_modules
COPY --from=builder /home/node/dist /app/dist

EXPOSE 3000

CMD ["/app/dist/index.js"]
