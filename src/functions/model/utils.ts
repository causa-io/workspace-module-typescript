import type { WorkspaceContext } from '@causa/workspace';
import { ModelMakeGeneratorQuicktypeInputData } from '@causa/workspace-core';
import { NoImplementationFoundError } from '@causa/workspace/function-registry';
import type { InputData } from 'quicktype-core';

/**
 * The default leading comment for the generated file.
 */
export const LEADING_COMMENT = `This file was generated by the Causa command line. Do not edit it manually.`;

/**
 * Wraps a call to {@link ModelMakeGeneratorQuicktypeInputData} and throws a more user-friendly error if no
 * implementation is found.
 *
 * @param context The {@link WorkspaceContext}.
 * @param configuration The configuration for the code generator.
 * @returns The quicktype {@link InputData} for the code generator.
 */
export async function tryMakeGeneratorInputData(
  context: WorkspaceContext,
  configuration: Record<string, unknown>,
): Promise<InputData> {
  try {
    return await context.call(ModelMakeGeneratorQuicktypeInputData, {
      configuration,
    });
  } catch (error) {
    if (error instanceof NoImplementationFoundError) {
      throw new Error(
        'Could not generate input data for code generation. Ensure the model schema format is supported.',
      );
    }

    throw error;
  }
}
